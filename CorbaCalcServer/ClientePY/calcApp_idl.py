# Python stubs generated by omniidl from calcApp.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "calcApp"
#
__name__ = "calcApp"
_0_calcApp = omniORB.openModule("calcApp", r"calcApp.idl")
_0_calcApp__POA = omniORB.openModule("calcApp__POA", r"calcApp.idl")


# interface calc
_0_calcApp._d_calc = (omniORB.tcInternal.tv_objref, "IDL:calcApp/calc:1.0", "calc")
omniORB.typeMapping["IDL:calcApp/calc:1.0"] = _0_calcApp._d_calc
_0_calcApp.calc = omniORB.newEmptyClass()
class calc :
    _NP_RepositoryId = _0_calcApp._d_calc[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_calcApp.calc = calc
_0_calcApp._tc_calc = omniORB.tcInternal.createTypeCode(_0_calcApp._d_calc)
omniORB.registerType(calc._NP_RepositoryId, _0_calcApp._d_calc, _0_calcApp._tc_calc)

# calc operations and attributes
calc._d_soma = ((omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float), (omniORB.tcInternal.tv_float, ), None)
calc._d_sub = ((omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float), (omniORB.tcInternal.tv_float, ), None)
calc._d_multi = ((omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float), (omniORB.tcInternal.tv_float, ), None)
calc._d_div = ((omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float), (omniORB.tcInternal.tv_float, ), None)

# calc object reference
class _objref_calc (CORBA.Object):
    _NP_RepositoryId = calc._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def soma(self, *args):
        return _omnipy.invoke(self, "soma", _0_calcApp.calc._d_soma, args)

    def sub(self, *args):
        return _omnipy.invoke(self, "sub", _0_calcApp.calc._d_sub, args)

    def multi(self, *args):
        return _omnipy.invoke(self, "multi", _0_calcApp.calc._d_multi, args)

    def div(self, *args):
        return _omnipy.invoke(self, "div", _0_calcApp.calc._d_div, args)

    __methods__ = ["soma", "sub", "multi", "div"] + CORBA.Object.__methods__

omniORB.registerObjref(calc._NP_RepositoryId, _objref_calc)
_0_calcApp._objref_calc = _objref_calc
del calc, _objref_calc

# calc skeleton
__name__ = "calcApp__POA"
class calc (PortableServer.Servant):
    _NP_RepositoryId = _0_calcApp.calc._NP_RepositoryId


    _omni_op_d = {"soma": _0_calcApp.calc._d_soma, "sub": _0_calcApp.calc._d_sub, "multi": _0_calcApp.calc._d_multi, "div": _0_calcApp.calc._d_div}

calc._omni_skeleton = calc
_0_calcApp__POA.calc = calc
omniORB.registerSkeleton(calc._NP_RepositoryId, calc)
del calc
__name__ = "calcApp"

#
# End of module "calcApp"
#
__name__ = "calcApp_idl"

_exported_modules = ( "calcApp", )

# The end.
